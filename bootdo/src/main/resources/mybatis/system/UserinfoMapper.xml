<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.system.dao.UserinfoDao">

	<select id="get" resultType="com.bootdo.system.domain.UserinfoDO">
		select `infoID`,`userID`,`name`,`Phone`,`address`,`zip_code`,`default_address`,`create_by`,`create_time`,`update_by`,`update_time` from app_userinfo where infoID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.system.domain.UserinfoDO">
		select `infoID`,`userID`,`name`,`Phone`,`address`,`zip_code`,`default_address`,`create_by`,`create_time`,`update_by`,`update_time` from app_userinfo
        <where>  
		  		  <if test="infoid != null and infoid != ''"> and infoID = #{infoid} </if>
		  		  <if test="userid != null and userid != ''"> and userID = #{userid} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="phone != null and phone != ''"> and Phone = #{phone} </if>
		  		  <if test="address != null and address != ''"> and address = #{address} </if>
		  		  <if test="zipCode != null and zipCode != ''"> and zip_code = #{zipCode} </if>
		  		  <if test="defaultAddress != null and defaultAddress != ''"> and default_address = #{defaultAddress} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by infoID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from app_userinfo
		 <where>  
		  		  <if test="infoid != null and infoid != ''"> and infoID = #{infoid} </if>
		  		  <if test="userid != null and userid != ''"> and userID = #{userid} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="phone != null and phone != ''"> and Phone = #{phone} </if>
		  		  <if test="address != null and address != ''"> and address = #{address} </if>
		  		  <if test="zipCode != null and zipCode != ''"> and zip_code = #{zipCode} </if>
		  		  <if test="defaultAddress != null and defaultAddress != ''"> and default_address = #{defaultAddress} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.system.domain.UserinfoDO" useGeneratedKeys="true" keyProperty="infoid">
		insert into app_userinfo
		(
			`userID`, 
			`name`, 
			`Phone`, 
			`address`, 
			`zip_code`, 
			`default_address`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`
		)
		values
		(
			#{userid}, 
			#{name}, 
			#{phone}, 
			#{address}, 
			#{zipCode}, 
			#{defaultAddress}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.system.domain.UserinfoDO">
		update app_userinfo 
		<set>
			<if test="userid != null">`userID` = #{userid}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="phone != null">`Phone` = #{phone}, </if>
			<if test="address != null">`address` = #{address}, </if>
			<if test="zipCode != null">`zip_code` = #{zipCode}, </if>
			<if test="defaultAddress != null">`default_address` = #{defaultAddress}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where infoID = #{infoid}
	</update>
	
	<delete id="remove">
		delete from app_userinfo where infoID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from app_userinfo where infoID in 
		<foreach item="infoid" collection="array" open="(" separator="," close=")">
			#{infoid}
		</foreach>
	</delete>

</mapper>